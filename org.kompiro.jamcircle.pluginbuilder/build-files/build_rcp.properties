# The name of the Product Configuration file (.product). You can either put a product file in the root
# folder of this pluginbuilder project and specify its name here. Or you can use an existing product file
# from one of your plug-ins by specifying a path like ${buildDirectory}/plugins/<your-plugin>/<your-product>.product.
# This field is mandatory. 
# @category rcp
product=${buildDirectory}/plugins/org.kompiro.jamcircle.rcp/jamcircle.product
# set needs to run tests(but when rcp build,tests are unnecesary because it is tested.)
#isRunTests=true

# Select the platforms for which you want to create RCP deliverables.
# @category rcp
# @type list separator=&;values=win32,win32,x86&linux,gtk,ppc&linux,gtk,x86 & linux,gtk,x86_64 & linux,motif,x86 & solaris,motif,sparc & solaris,gtk,sparc & aix,motif,ppc & hpux,motif,PA_RISC & macosx,carbon,ppc & macosx,carbon,x86
configs=linux,gtk,x86&macosx,carbon,x86&win32,win32,x86

# Prefix for the created archive file name. The archive name always contains the configuration. The prefix and configuration are divided by a minus character. If you want to include the version you can reference the property ${version.full}, a sample value for archiveNamePrefix is myRcpApp-${version.full}  
# @category rcp
archiveNamePrefix=jamcircle-${version.full}

# You need to set this to true in order to get archives for your configurations.
# @category rcp
# @type Boolean
#runPackager=false
runPackager=true
#skipDirector=

# A Pluginbuilder property which prevents running the postBuild target. Since the RCP 
# build is usually run after a regular build which includes the postBuild phase no.postBuild
# should be activated for RCP builds
# @category rcp_hidden
# @type Boolean
#no.postBuild=true

# Another Pluginbuilder property which should be activated for RCP builds
# @category rcp_hidden
# @type Boolean 
#build.container.feature=true
#build.container.feature=

# Set the root path in the platform specific packages
# @category packaging
archivePrefix=jamcircle

# Set delta pack for p2 publisher
#pluginPath=/var/buildbase/eclipse/dropins/delta-pack/eclipse:/var/buildbase/dropins/jamcircle-libs/eclipse:/var/buildbase/eclipse/dropins/swtbot/eclipse
pluginPath=${buildDirectory}:/var/buildbase/eclipse/dropins/delta-pack/eclipse

# Create a provisioning (p2) repository. Since Eclipse 3.4 it is recommended that you create
# a p2 repository for your features.
# However, the installation of old-style (pre p2) update sites is still possible.
# @type Boolean
# @category p2
generate.p2.metadata=true

# @category hidden
p2.metadata.repo=file:/tmp/org.kompiro.jamcircle.builder/repo

# @category hidden
p2.artifact.repo=file:/tmp/org.kompiro.jamcircle.builder/repo

# The name of the metadata repository. The Update Manager will display this name.
# @category p2
p2.metadata.repo.name=JAMCircle Update Site

# The name of the artifacts repository
# @category p2
p2.artifact.repo.name=JAMCircle Repo Name

# @category hidden
p2.flavor=tooling

# @category hidden
p2.publish.artifacts=true

# @category hidden
p2.gathering = true

# @category hidden
p2.root.name=${archivePrefix}

# @category hidden
p2.root.version=${version.full}
