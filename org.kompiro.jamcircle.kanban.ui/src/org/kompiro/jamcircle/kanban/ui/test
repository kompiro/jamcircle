commit 56c9bf5094ab2beddb5f6e2afe83573e60ec023f
Author: Hiroki Kondo a.k.a kompiro <kompiro@gmail.com>
Date:   Fri Sep 11 21:40:57 2009 +0900

    added debug plugins

diff --git a/org.kompiro.jamcircle.kanban.ui/src/org/kompiro/jamcircle/kanban/ui/KanbanUIActivator.java b/org.kompiro.jamcircle.kanban.ui/src/org/kompiro/jamcircle/kanban/ui/KanbanUIActivator.java
index 2a2fd41..8f6249d 100644
--- a/org.kompiro.jamcircle.kanban.ui/src/org/kompiro/jamcircle/kanban/ui/KanbanUIActivator.java
+++ b/org.kompiro.jamcircle.kanban.ui/src/org/kompiro/jamcircle/kanban/ui/KanbanUIActivator.java
@@ -1,18 +1,13 @@
 package org.kompiro.jamcircle.kanban.ui;
 
 
-import org.eclipse.core.runtime.IStatus;
-import org.eclipse.jface.dialogs.MessageDialog;
 import org.eclipse.jface.resource.ImageRegistry;
 import org.eclipse.swt.widgets.Shell;
 import org.eclipse.ui.IWorkbench;
 import org.eclipse.ui.IWorkbenchWindow;
 import org.eclipse.ui.plugin.AbstractUIPlugin;
-import org.kompiro.jamcircle.kanban.KanbanStatusHandler;
 import org.kompiro.jamcircle.kanban.service.KanbanService;
 import org.kompiro.jamcircle.scripting.ScriptingService;
-import org.kompiro.jamcircle.storage.IStatusHandler;
-import org.kompiro.jamcircle.storage.StorageStatusHandler;
 import org.kompiro.jamcircle.xmpp.service.XMPPConnectionService;
 import org.osgi.framework.BundleContext;
 import org.osgi.util.tracker.ServiceTracker;
@@ -29,8 +24,6 @@ public class KanbanUIActivator extends AbstractUIPlugin {
 
 	private ServiceTracker connectionTracker;
 	
-	private IStatusHandler dialogHandler;
-
 	private ServiceTracker kanbanServiceTracker;
 
 	private ServiceTracker scriptingServiceTracker;
@@ -44,30 +37,7 @@ public class KanbanUIActivator extends AbstractUIPlugin {
 	public void start(BundleContext context) throws Exception {
 		super.start(context);
 		KanbanJFaceResource.initialize();
-		dialogHandler = new IStatusHandler(){
-
-			public void displayStatus(String title, IStatus status) {
-//				MessageDialog.openWarning(getShell(), title, status.getMessage());
-			}
-
-			public void fail(IStatus status, boolean informUser) {
-				Throwable exception = status.getException();
-				if(informUser){
-					String message = String.format("%s\nException:'%s' reason: %s", status.getMessage(),exception.getClass().getName(),exception.getLocalizedMessage());
-					MessageDialog.openError(getShell(), "Unexpected error is occured.",message);
-				}
-				exception.printStackTrace();
-			}
-
-			public void info(String message) {
-//				MessageDialog.openInformation(getShell(), "Status Infomation", message);
-				System.out.println(message);
-			}
-			
-		};
-		StorageStatusHandler.addStatusHandler(dialogHandler);
-		KanbanStatusHandler.addStatusHandler(dialogHandler);
-		KanbanUIStatusHandler.addStatusHandler(dialogHandler);
+
 		kanbanServiceTracker = new ServiceTracker(context, KEY_OF_KANBAN_SERVICE, null);
 		kanbanServiceTracker.open();
 		connectionTracker = new ServiceTracker(context, KEY_OF_XMPPCONNECTION_SERVICE, null);
@@ -79,9 +49,9 @@ public class KanbanUIActivator extends AbstractUIPlugin {
 
 	public void stop(BundleContext context) throws Exception {
 		plugin = null;
-		KanbanStatusHandler.removeStatusHandler(dialogHandler);
-		KanbanUIStatusHandler.removeStatusHandler(dialogHandler);
-		StorageStatusHandler.removeStatusHandler(dialogHandler);
+//		KanbanStatusHandler.removeStatusHandler(dialogHandler);
+//		KanbanUIStatusHandler.removeStatusHandler(dialogHandler);
+//		StorageStatusHandler.removeStatusHandler(dialogHandler);
 		connectionTracker.close();
 		kanbanServiceTracker.close();
 		super.stop(context);
